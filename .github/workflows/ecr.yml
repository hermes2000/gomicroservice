on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

name: Build and push go image to ECR

env:
  APP_NAME: secops-dev-test

jobs:
  deploy:
    name: Deploy
    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::861581194401:role/gitactions_ecr_test_role
        role-duration-seconds: 1200
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Docker meta
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: secops-dev-test
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY}}/${{ env.REPOSITORY }}
        # Docker tags based on the following events/attributes
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        IMAGE_TAG: ${{ steps.meta.outputs.tags }}
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: secops-dev-test
      run: |
        docker build -t $REGISTRY/$REPOSITORY$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY$IMAGE_TAG

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64,linux/arm/v7
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
